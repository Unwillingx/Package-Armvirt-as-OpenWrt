name: Package Armvirt as OpenWrt
on:
  push:
    branches:
      - main
jobs:
  download:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: List tags
        uses: actions/github-script@v5
        with:
          script: |
            const { data } = await github.git.listMatchingRefs({
              owner: Unwillingx,
              repo: OpenWrt-N1-firmware,
              ref: 'tags/*',
            });
            core.setOutput('tags', data.map(({ ref }) => ref.replace(/^refs\/tags\//, '')));
      - name: Download latest release asset
        uses: actions/download-release@v1
        with:
          owner: Unwillingx
          repo: Unwillingx/OpenWrt-N1-firmware
          tag_name: ${{ steps.tags.outputs.tags }}
          asset_name: openwrt-armvirt-64-default-rootfs.tar.gz
          path: /opt
          
      - name: Package Armvirt as OpenWrt
        uses: unifreq/openwrt_packit@master
        env:
          OPENWRT_ARMVIRT: opt/openwrt-armvirt-64-default-rootfs.tar.gz
          PACKAGE_SOC: s905d
          KERNEL_VERSION_DIR: kernel_n1
          KERNEL_VERSION_NAME: 6.1.21
          GH_TOKEN: ${{ secrets.MANAGE_RELEASE }}
      
      - name: Generate release tag
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          echo "status=success" >> $GITHUB_OUTPUT
          
      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.MANAGE_RELEASE }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.PACKAGED_OUTPUTPATH }}/*
          
          
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.MANAGE_RELEASE }}
